{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "To Create the MSTaaS Platform VPC, with 2 Private and 2 Security Subnets",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "TaggingTheResources"
          },
          "Parameters": [
            "OrgName",
            "ProjectName",
            "Environment",
            "OwnerInformation",
            "BillingInformation",
            "Provisioner"
          ]
        },
        {
          "Label": {
            "default": "VPC Configuration"
          },
          "Parameters": [
            "VpcCIDR",
            "AZs",
            "SecuritySubnetAZ1CIDR",
            "SecuritySubnetAZ2CIDR",
            "PrivateSubnetAZ1CIDR",
            "PrivateSubnetAZ2CIDR",
            "RetentionInDays",
            "VPCTrafficType"
          ]
        },
        {
          "Label": {
            "default": "Buckets Configuration"
          },
          "Parameters": [
            "MoveToGlacierAfrDays",
            "DeleteFromGlacierAfrDays"
          ]
        },
        {
          "Label": {
            "default": "IAM Configuration"
          },
          "Parameters": [
            "Password"
          ]
        },
        {
          "Label": {
            "default": "EC2 Configuration"
          },
          "Parameters": [
            "SSHKeyName"
          ]
        },
        {
          "Label": {
            "default": "CloudTrail Configuration"
          },
          "Parameters": [
            "OperatorEmail"
          ]
        },
        {
          "Label": {
            "default": "Lambda Configuration"
          },
          "Parameters": [
            "BucketForLambdaCode",
            "CleanupSnapShotCode",
            "CreateSnapShotCode"
          ]
        },
        {
          "Label": {
            "default": "PostGreSQL Configuration"
          },
          "Parameters": [
            "DBName",
            "DBUsername",
            "DBPassword",
            "DBClass",
            "DBAllocatedStorage"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "VpcCIDR": {
      "Description": "CIDR for the VPC",
      "Type": "String",
      "Default": "10.210.0.0/16"
    },
    "AZs": {
      "Type": "List<AWS::EC2::AvailabilityZone::Name>",
      "Default": "us-east-1a,us-east-1b",
      "Description": "Select Two AZs, where the Public and Private Subnets will be deployed."
    },
    "SecuritySubnetAZ1CIDR": {
      "Description": "CIDR for Public Subnet in AZ1",
      "Type": "String",
      "Default": "10.210.10.0/24"
    },
    "SecuritySubnetAZ2CIDR": {
      "Description": "CIDR for Public Subnet in AZ2",
      "Type": "String",
      "Default": "10.210.11.0/24"
    },
    "PrivateSubnetAZ1CIDR": {
      "Description": "CIDR for private Subnet in AZ1",
      "Type": "String",
      "Default": "10.210.20.0/24"
    },
    "PrivateSubnetAZ2CIDR": {
      "Description": "CIDR for private Subnet in AZ2",
      "Type": "String",
      "Default": "10.210.21.0/24"
    },
    "RetentionInDays": {
      "Description": "Specifies the number of days you want to retain Flow log events?",
      "Type": "Number",
      "Default": 14,
      "AllowedValues": [
        1,
        3,
        5,
        7,
        14,
        30,
        60,
        90,
        120,
        150,
        180,
        365,
        400,
        545,
        731,
        1827,
        3653
      ]
    },
    "VPCTrafficType": {
      "Description": "The type of VPC traffic to log.",
      "Type": "String",
      "Default": "REJECT",
      "AllowedValues": [
        "ACCEPT",
        "REJECT",
        "ALL"
      ]
    },
    "SSHKeyName": {
      "Default": "test",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "MoveToGlacierAfrDays": {
      "Default": "30",
      "Description": "Enter the number of day to move the file to glacier",
      "Type": "Number"
    },
    "DeleteFromGlacierAfrDays": {
      "Default": "90",
      "Description": "Enter the number of days to Delete the files from glacier",
      "Type": "Number"
    },
    "OperatorEmail": {
      "Description": "Email address to notify when new logs are published.",
      "Default": "atvantagemstaas@ats.com",
      "Type": "String"
    },
    "BucketForLambdaCode": {
      "Description": "Select the bucket name where the lamdba fucntion code resides",
      "Default": "mylambda-code-bucket",
      "Type": "String"
    },
    "CleanupSnapShotCode": {
      "Description": "Select the Key name in the bucket to consume the code, Code Should be uploaded to Bucker Prior",
      "Default": "lambda-cleanup-snapshot.zip",
      "Type": "String"
    },
    "CreateSnapShotCode": {
      "Description": "Select the Key name in the bucket to consume the code, Code Should be uploaded to Bucker Prior",
      "Type": "String",
      "Default": "lambda-create-snapshot.zip"
    },
    "Password": {
      "NoEcho": "true",
      "Default": "HelloWorld123@9Id",
      "Type": "String",
      "Description": "New account password",
      "MinLength": "1",
      "MaxLength": "41",
      "ConstraintDescription": "Please refer to IAM Password Policy in your account"
    },
    "DBName": {
      "Default": "pgdb",
      "Description": "The database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "8",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBUsername": {
      "Default": "root",
      "NoEcho": "true",
      "Description": "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
      "Default": "root1234",
      "NoEcho": "true",
      "Description": "The database admin account password",
      "Type": "String",
      "MinLength": "8"
    },
    "DBClass": {
      "Default": "db.t2.small",
      "Description": "Database instance class",
      "Type": "String",
      "AllowedValues": [
        "db.t2.small",
        "db.m1.small",
        "db.m1.large",
        "db.m1.xlarge",
        "db.m2.xlarge"
      ],
      "ConstraintDescription": "must select a valid database instance type."
    },
    "DBAllocatedStorage": {
      "Default": "5",
      "Description": "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "6144",
      "ConstraintDescription": "must be between 5+"
    },
    "OrgName": {
      "Description": "Enter the Organization Name",
      "Default": "",
      "Type": "String"
    },
    "ProjectName": {
      "Description": "Enter the Project Name",
      "Default": "ATVantageMSTaaS",
      "Type": "String"
    },
    "Environment": {
      "Description": "Enter the Environment Name",
      "Default": "Prod",
      "Type": "String",
      "AllowedValues": [
        "Prod",
        "Dev",
        "Test",
        "QA",
        "Pre-Prod"
      ]
    },
    "OwnerInformation": {
      "Description": "Enter the Owner Name who is owning this stack",
      "Default": "",
      "Type": "String"
    },
    "BillingInformation": {
      "Description": "Enter the Billing department id or Costcenter",
      "Default": "",
      "Type": "String"
    },
    "Provisioner": {
      "Description": "Enter the Provisioner type if it has provisioned through marketplace or others",
      "Default": "",
      "Type": "String"
    }
  },
  "Resources": {
    "cloudtrail": {
      "Type": "AWS::S3::Bucket",
      "Metadata": {
        "Object1": "Location1",
        "Object2": "Location2"
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "GlacierRule",
              "Status": "Enabled",
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 1
                }
              ],
              "ExpirationInDays": "700",
              "Transitions": [
                {
                  "TransitionInDays": {
                    "Ref": "MoveToGlacierAfrDays"
                  },
                  "StorageClass": "Glacier"
                }
              ]
            }
          ]
        }
      }
    },
    "BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "cloudtrail"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AWSCloudTrailAclCheck",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "s3:GetBucketAcl",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "cloudtrail"
                    }
                  ]
                ]
              }
            },
            {
              "Sid": "AWSCloudTrailWrite",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "cloudtrail"
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "/*"
                  ]
                ]
              },
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            }
          ]
        }
      }
    },
    "Topic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [
          {
            "Endpoint": {
              "Ref": "OperatorEmail"
            },
            "Protocol": "email"
          }
        ]
      }
    },
    "TopicPolicy": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "Topic"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "AWSCloudTrailSNSPolicy",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Resource": "*",
              "Action": "SNS:Publish"
            }
          ]
        }
      }
    },
    "myTrail": {
      "DependsOn": [
        "BucketPolicy",
        "TopicPolicy"
      ],
      "Type": "AWS::CloudTrail::Trail",
      "Properties": {
        "S3BucketName": {
          "Ref": "cloudtrail"
        },
        "IsLogging": true
      }
    },
    "AtVantageMSTaaS": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VpcCIDR"
        },
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ProjectName} IGW"
            }
          },
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "AtVantageMSTaaS"
        }
      }
    },
    "SecuritySubnetAZ1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AtVantageMSTaaS"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Ref": "AZs"
            }
          ]
        },
        "CidrBlock": {
          "Ref": "SecuritySubnetAZ1CIDR"
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ProjectName} AZ1 - Security Subnet"
            }
          },
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "SecuritySubnetAZ2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AtVantageMSTaaS"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Ref": "AZs"
            }
          ]
        },
        "CidrBlock": {
          "Ref": "SecuritySubnetAZ2CIDR"
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ProjectName} AZ2 - Security Subnet"
            }
          },
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "PrivateSubnetAZ1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AtVantageMSTaaS"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Ref": "AZs"
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetAZ1CIDR"
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ProjectName} AZ1 - Private Subnet"
            }
          },
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "PrivateSubnetAZ2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AtVantageMSTaaS"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Ref": "AZs"
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetAZ2CIDR"
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ProjectName} AZ2 - Private Subnet"
            }
          },
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "NatGateway1EIP": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "InternetGatewayAttachment",
      "Properties": {
        "Domain": "AtVantageMSTaaS"
      }
    },
    "NatGateway2EIP": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "InternetGatewayAttachment",
      "Properties": {
        "Domain": "AtVantageMSTaaS"
      }
    },
    "NatGateway1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "NatGateway1EIP",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "SecuritySubnetAZ1"
        },
        "Tags": [
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "NatGateway2": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "NatGateway2EIP",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "SecuritySubnetAZ2"
        },
        "Tags": [
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "SecurityRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AtVantageMSTaaS"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ProjectName} Public Routes to Internet"
            }
          },
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "DefaultPublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "InternetGatewayAttachment",
      "Properties": {
        "RouteTableId": {
          "Ref": "SecurityRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "SecuritySubnetAZ1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "SecurityRouteTable"
        },
        "SubnetId": {
          "Ref": "SecuritySubnetAZ1"
        }
      }
    },
    "SecuritySubnetAZ2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "SecurityRouteTable"
        },
        "SubnetId": {
          "Ref": "SecuritySubnetAZ2"
        }
      }
    },
    "PrivateRouteTable1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AtVantageMSTaaS"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ProjectName} AZ1 - Private Routes"
            }
          },
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "PrivateSubnetAZ1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTable1"
        },
        "SubnetId": {
          "Ref": "PrivateSubnetAZ1"
        }
      }
    },
    "PrivateRouteTable2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AtVantageMSTaaS"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ProjectName} Private Routes (AZ2)"
            }
          },
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "PrivateSubnetAZ2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTable2"
        },
        "SubnetId": {
          "Ref": "PrivateSubnetAZ2"
        }
      }
    },
    "FlowLogRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "vpc-flow-logs.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "flowlogs-policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "FlowLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": {
          "Ref": "RetentionInDays"
        }
      }
    },
    "MyFlowLog": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "FlowLogRole",
            "Arn"
          ]
        },
        "LogGroupName": "FlowLogGroup",
        "ResourceId": {
          "Ref": "AtVantageMSTaaS"
        },
        "ResourceType": "VPC",
        "TrafficType": {
          "Ref": "VPCTrafficType"
        }
      }
    },
    "DataBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "GlacierRule",
              "Status": "Enabled",
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 1
                }
              ],
              "ExpirationInDays": {
                "Ref": "DeleteFromGlacierAfrDays"
              },
              "Transitions": [
                {
                  "TransitionInDays": {
                    "Ref": "MoveToGlacierAfrDays"
                  },
                  "StorageClass": "Glacier"
                }
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Fn::Sub": "${ProjectName}"
            }
          },
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ],
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "LoggingBucket"
          },
          "LogFilePrefix": "access-logs"
        }
      }
    },
    "LoggingBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "GlacierRule",
              "Status": "Enabled",
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 1
                }
              ],
              "ExpirationInDays": {
                "Ref": "DeleteFromGlacierAfrDays"
              },
              "Transitions": [
                {
                  "TransitionInDays": {
                    "Ref": "MoveToGlacierAfrDays"
                  },
                  "StorageClass": "Glacier"
                }
              ]
            }
          ]
        },
        "AccessControl": "LogDeliveryWrite"
      }
    },
    "S3Endpoint": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": "*",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "DataBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "LoggingBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "cloudtrail"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "RouteTableIds": [
          {
            "Ref": "SecurityRouteTable"
          },
          {
            "Ref": "PrivateRouteTable1"
          },
          {
            "Ref": "PrivateRouteTable2"
          }
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".s3"
            ]
          ]
        },
        "VpcId": {
          "Ref": "AtVantageMSTaaS"
        }
      }
    },
    "DoDUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "LoginProfile": {
          "Password": {
            "Ref": "Password"
          }
        }
      }
    },
    "DoDUserGroup": {
      "Type": "AWS::IAM::Group"
    },
    "Users1": {
      "Type": "AWS::IAM::UserToGroupAddition",
      "Properties": {
        "GroupName": {
          "Ref": "DoDUserGroup"
        },
        "Users": [
          {
            "Ref": "DoDUser"
          }
        ]
      }
    },
    "DoDUserPolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "DoDUsers",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListAllMyBuckets"
              ],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket",
                "s3:GetBucketLocation"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "DataBucket"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:GetObject",
                "s3:GetObjectAcl",
                "s3:DeleteObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "DataBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "Groups": [
          {
            "Ref": "DoDUserGroup"
          }
        ]
      }
    },
    "DoDKeys": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {
          "Ref": "DoDUser"
        }
      }
    },
    "Admin1User": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "LoginProfile": {
          "Password": {
            "Ref": "Password"
          }
        }
      }
    },
    "Admin1UserGroup": {
      "Type": "AWS::IAM::Group"
    },
    "Users2": {
      "Type": "AWS::IAM::UserToGroupAddition",
      "Properties": {
        "GroupName": {
          "Ref": "Admin1UserGroup"
        },
        "Users": [
          {
            "Ref": "Admin1User"
          }
        ]
      }
    },
    "Admin1UserPolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "Admin1Users",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListAllMyBuckets"
              ],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket",
                "s3:GetBucketLocation"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "DataBucket"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "LoggingBucket"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "cloudtrail"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:GetObject",
                "s3:GetObjectAcl",
                "s3:DeleteObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "DataBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "LoggingBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "cloudtrail"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "Groups": [
          {
            "Ref": "Admin1UserGroup"
          }
        ]
      }
    },
    "Admin1Keys": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {
          "Ref": "Admin1User"
        }
      }
    },
    "SecurityUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "LoginProfile": {
          "Password": {
            "Ref": "Password"
          }
        }
      }
    },
    "SecurityUserGroup": {
      "Type": "AWS::IAM::Group"
    },
    "Users3": {
      "Type": "AWS::IAM::UserToGroupAddition",
      "Properties": {
        "GroupName": {
          "Ref": "SecurityUserGroup"
        },
        "Users": [
          {
            "Ref": "SecurityUser"
          }
        ]
      }
    },
    "SecurityUserPolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "SecurityUsers",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListAllMyBuckets"
              ],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket",
                "s3:GetBucketLocation"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "cloudtrail"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:GetObject",
                "s3:GetObjectAcl",
                "s3:DeleteObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "cloudtrail"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "Groups": [
          {
            "Ref": "SecurityUserGroup"
          }
        ]
      }
    },
    "SecurityKeys": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {
          "Ref": "SecurityUser"
        }
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "lambda-execution-policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "logs:CreateLogGroup",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:Describe*",
                    "ec2:CreateSnapshot",
                    "ec2:DeleteSnapshot",
                    "ec2:CreateTags",
                    "tag:AddResourceTags",
                    "tag:RemoveResourceTags",
                    "tag:TagResources",
                    "tag:UntagResources"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "cleanupsnapshot": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BucketForLambdaCode"
          },
          "S3Key": {
            "Ref": "CleanupSnapShotCode"
          }
        },
        "MemorySize": 128,
        "Handler": "lambda-cleanup-snapshot.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Timeout": 3,
        "Runtime": "python2.7",
        "Description": "lambda-cleanup-snapshot",
        "Tags": [
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "createsnapshot": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "BucketForLambdaCode"
          },
          "S3Key": {
            "Ref": "CreateSnapShotCode"
          }
        },
        "MemorySize": 128,
        "Handler": "lambda-create-snapshot.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Timeout": 3,
        "Runtime": "python2.7",
        "Description": "lambda-cleanup-snapshot",
        "Tags": [
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    },
    "ScheduledRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "ScheduledRule",
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cleanupsnapshot",
                "Arn"
              ]
            },
            "Id": {
              "Ref": "cleanupsnapshot"
            }
          },
          {
            "Arn": {
              "Fn::GetAtt": [
                "createsnapshot",
                "Arn"
              ]
            },
            "Id": {
              "Ref": "createsnapshot"
            }
          }
        ]
      }
    },
    "PermissionForEventsToInvokeLambda1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "cleanupsnapshot"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ScheduledRule",
            "Arn"
          ]
        }
      }
    },
    "PermissionForEventsToInvokeLambda2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "createsnapshot"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ScheduledRule",
            "Arn"
          ]
        }
      }
    },
    "MStaaSDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "DB Private Subnet",
        "SubnetIds": [
          {
            "Ref": "PrivateSubnetAZ1"
          },
          {
            "Ref": "PrivateSubnetAZ2"
          }
        ],
        "Tags": [
          {
            "Key": "OrgName",
            "Value": {
              "Ref": "OrgName"
            }
          },
          {
            "Key": "ProjectName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "OwnerInformation",
            "Value": {
              "Ref": "OwnerInformation"
            }
          },
          {
            "Key": "BillingInformation",
            "Value": {
              "Ref": "BillingInformation"
            }
          },
          {
            "Key": "Provisioner",
            "Value": {
              "Ref": "Provisioner"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "AtVantageMSTaaS": {
      "Description": "A reference to the created VPC",
      "Value": {
        "Ref": "AtVantageMSTaaS"
      }
    },
    "PublicSubnets": {
      "Description": "A list of the public subnets",
      "Value": {
        "Fn::Join": [
          ", ",
          [
            {
              "Ref": "SecuritySubnetAZ1"
            },
            {
              "Ref": "SecuritySubnetAZ2"
            }
          ]
        ]
      }
    },
    "PrivateSubnets": {
      "Description": "A list of the private subnets",
      "Value": {
        "Fn::Join": [
          ", ",
          [
            {
              "Ref": "PrivateSubnetAZ1"
            },
            {
              "Ref": "PrivateSubnetAZ2"
            }
          ]
        ]
      }
    },
    "DataBucketName": {
      "Value": {
        "Ref": "DataBucket"
      },
      "Description": "Name of the Data Storage Amazon S3 bucket with a logging configuration.\n Enabled with Default AES256"
    },
    "LoggingBucketName": {
      "Value": {
        "Ref": "LoggingBucket"
      },
      "Description": "Name of the Logging Amazon S3 bucket with a logging configuration.\n Enabled with Default AES256"
    },
    "CloudTrailBucketName": {
      "Value": {
        "Ref": "cloudtrail"
      },
      "Description": "Name of the CloudTrail Amazon S3 bucket with a logging configuration.\n Enabled with Default AES256"
    },
    "DoDAccessKey": {
      "Value": {
        "Ref": "DoDKeys"
      },
      "Description": "AWSAccessKeyId of new user"
    },
    "DoDSecretKey": {
      "Value": {
        "Fn::GetAtt": [
          "DoDKeys",
          "SecretAccessKey"
        ]
      },
      "Description": "AWSSecretKey of new user"
    },
    "Admin1AccessKey": {
      "Value": {
        "Ref": "Admin1Keys"
      },
      "Description": "AWSAccessKeyId of new user"
    },
    "Admin1SecretKey": {
      "Value": {
        "Fn::GetAtt": [
          "Admin1Keys",
          "SecretAccessKey"
        ]
      },
      "Description": "AWSSecretKey of new user"
    },
    "SecurityAccessKey": {
      "Value": {
        "Ref": "SecurityKeys"
      },
      "Description": "AWSAccessKeyId of new user"
    },
    "SecuritySecretKey": {
      "Value": {
        "Fn::GetAtt": [
          "SecurityKeys",
          "SecretAccessKey"
        ]
      },
      "Description": "AWSSecretKey of new user"
    },
    "CleanupSnapshot": {
      "Value": {
        "Ref": "cleanupsnapshot"
      },
      "Description": "cleanup-snapshot"
    },
    "CreateSnapshot": {
      "Value": {
        "Ref": "cleanupsnapshot"
      },
      "Description": "create-snapshot"
    },
    "VPCId": {
      "Description": "MStaaS VPC ID",
      "Value": {
        "Ref": "AtVantageMSTaaS"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-MStaaSVPCID"
        }
      }
    },
    "SecuritySubnetAZ1": {
      "Description": "The subnet ID to use for Firewall",
      "Value": {
        "Ref": "SecuritySubnetAZ1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SecuritySubnetAZ1ID"
        }
      }
    },
    "SecuritySubnetAZ2": {
      "Description": "The subnet ID to use for Firewall",
      "Value": {
        "Ref": "SecuritySubnetAZ2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SecuritySubnetAZ2ID"
        }
      }
    },
    "PrivateSubnetAZ1": {
      "Description": "The subnet ID to use for Internal Servers",
      "Value": {
        "Ref": "PrivateSubnetAZ1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnetAZ1ID"
        }
      }
    },
    "PrivateSubnetAZ2": {
      "Description": "The subnet ID to use for Internal Servers",
      "Value": {
        "Ref": "PrivateSubnetAZ2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnetAZ2ID"
        }
      }
    },
    "PrivateSubnetAZ1AZ": {
      "Description": "The AZ of Private Subnet 1",
      "Value": {
        "Fn::GetAtt": [
          "PrivateSubnetAZ1",
          "AvailabilityZone"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-MStaaSPvtSubnetAZ1"
        }
      }
    },
    "SecuritySubnetAZ1AZ": {
      "Description": "The AZ of Security Subnet 1",
      "Value": {
        "Fn::GetAtt": [
          "SecuritySubnetAZ1",
          "AvailabilityZone"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-MStaaSSecuritySubnetAZ1"
        }
      }
    },
    "PrivateSubnetAZ2AZ": {
      "Description": "The AZ of Private Subnet 2",
      "Value": {
        "Fn::GetAtt": [
          "PrivateSubnetAZ2",
          "AvailabilityZone"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-MStaaSPvtSubnetAZ2"
        }
      }
    },
    "SecuritySubnetAZ2AZ": {
      "Description": "The AZ of Security Subnet 2",
      "Value": {
        "Fn::GetAtt": [
          "SecuritySubnetAZ2",
          "AvailabilityZone"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-MStaaSSecuritySubnetAZ2"
        }
      }
    },
    "SecurityRouteTable": {
      "Description": "The subnet ID to use for Firewall",
      "Value": {
        "Ref": "SecurityRouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SecurityRouteTable"
        }
      }
    },
    "PrivateRouteTable1AZ1": {
      "Description": "The subnet ID to use for Firewall",
      "Value": {
        "Ref": "PrivateRouteTable1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateRouteTable1AZ1"
        }
      }
    },
    "PrivateRouteTable2AZ2": {
      "Description": "The subnet ID to use for Internal Servers",
      "Value": {
        "Ref": "PrivateRouteTable2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateRouteTable2AZ2"
        }
      }
    },
    "MStaaSDBSubnetGroup": {
      "Description": "The subnet Group to use for RDS",
      "Value": {
        "Ref": "MStaaSDBSubnetGroup"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DBSubnetGroup"
        }
      }
    }
  }
}