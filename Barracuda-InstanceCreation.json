{
  "Description": "To Barracuda Instance with Custom Security Group.",
  "Parameters": {
    "MainTemplateName": {
      "Description": "Name of an active CloudFormation stack that contains the networking resources, such as the subnet and security group, that will be used in this stack.",
      "Type": "String",
      "MinLength": 1,
      "MaxLength": 255,
      "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
      "Default": "MainTemplate"
    },
    "EmailID": {
      "Description": "Email address to notify when new logs are published.",
      "Default": "youremail@domain.com",
      "Type": "String"
    },
    "SSHKeyName": {
      "Default": "Mumbai",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    }
  },
  "Resources": {
    "FirewallSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "Barracuda-Security-Group2",
        "GroupDescription": "Allow Inbound Traffic to Firewall",
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${MainTemplateName}-MStaaSVPCID"
          }
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 807,
            "ToPort": 807,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 806,
            "ToPort": 806,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 691,
            "ToPort": 691,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": 691,
            "ToPort": 691,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Barracuda-Security-Group"
          }
        ]
      }
    },
    "Barracuda": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-cfe4b2b0",
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "SubnetId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${MainTemplateName}-SecuritySubnetAZ1ID"
          }
        },
        "InstanceType": "t2.medium",
        "SecurityGroupIds": [
          {
            "Ref": "FirewallSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "Backup",
            "Value": "Yes"
          },
          {
            "Key": "Name",
            "Value": "Barracuda Instance"
          }
        ]
      }
    },
    "MySNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [
          {
            "Endpoint": {
              "Ref": "EmailID"
            },
            "Protocol": "email"
          }
        ]
      }
    },
    "CPUAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "CPU alarm for my instance",
        "AlarmActions": [
          {
            "Ref": "MySNSTopic"
          }
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "3",
        "Threshold": "90",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "InstanceId",
            "Value": {
              "Ref": "Barracuda"
            }
          }
        ]
      }
    },
    "DiskReads": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Disk Reads for my instance",
        "AlarmActions": [
          {
            "Ref": "MySNSTopic"
          }
        ],
        "MetricName": "DiskReadOps",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "3",
        "Threshold": "90",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "InstanceId",
            "Value": {
              "Ref": "Barracuda"
            }
          }
        ]
      }
    },
    "NetworkIn": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Network In for my instance",
        "AlarmActions": [
          {
            "Ref": "MySNSTopic"
          }
        ],
        "MetricName": "NetworkIn",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "3",
        "Threshold": "90",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "InstanceId",
            "Value": {
              "Ref": "Barracuda"
            }
          }
        ]
      }
    },
    "NetworkOut": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "NetworkOut for my instance",
        "AlarmActions": [
          {
            "Ref": "MySNSTopic"
          }
        ],
        "MetricName": "NetworkOut",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "3",
        "Threshold": "90",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "InstanceId",
            "Value": {
              "Ref": "Barracuda"
            }
          }
        ]
      }
    },
    "RecoveryEC2Alarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Trigger a recovery when instance status check fails for 15 consecutive minutes.",
        "Namespace": "AWS/EC2",
        "MetricName": "StatusCheckFailed_Instance",
        "Statistic": "Minimum",
        "Period": "60",
        "EvaluationPeriods": "15",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "0",
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:automate:",
                {
                  "Ref": "AWS::Region"
                },
                ":ec2:recover"
              ]
            ]
          }
        ],
        "Dimensions": [
          {
            "Name": "InstanceId",
            "Value": {
              "Ref": "Barracuda"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "FirewallSecurityGroup": {
      "Description": "Barracude Instance Security Group",
      "Value": {
        "Ref": "FirewallSecurityGroup"
      }
    },
    "BarracudaInstnaceId": {
      "Value": {
        "Ref": "Barracuda"
      },
      "Description": "instance ID"
    },
    "MySNSTopic": {
      "Value": {
        "Ref": "MySNSTopic"
      },
      "Description": "MySNSTopic"
    },
    "CPUAlarm": {
      "Value": {
        "Ref": "CPUAlarm"
      },
      "Description": "CPUAlarm"
    },
    "DiskReads": {
      "Value": {
        "Ref": "DiskReads"
      },
      "Description": "DiskReads"
    },
    "NetworkIn": {
      "Value": {
        "Ref": "NetworkIn"
      },
      "Description": "NetworkIn"
    },
    "NetworkOut": {
      "Value": {
        "Ref": "NetworkOut"
      },
      "Description": "NetworkOut"
    },
    "RecoveryEC2Alarm": {
      "Value": {
        "Ref": "RecoveryEC2Alarm"
      },
      "Description": "RecoveryEC2Alarm"
    }
  }
}